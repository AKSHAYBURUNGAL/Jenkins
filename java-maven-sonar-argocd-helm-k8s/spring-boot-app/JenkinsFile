pipeline {
    agent none
    stages {
        stage('Checkout') {
            agent {
                label 'docker' // Specify the label for the Jenkins agent
            }
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/AKSHAYBURUNGAL/Jenkins-Zero-To-Hero', credentialsId: 'github']]])
                }
            }
        }
        stage('Build and Test') {
            agent {
                label 'docker' // Specify the label for the Jenkins agent
            }
            steps {
                script {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh 'mvn clean package'
                    }
                }
            }
        }
        stage('Build and Push Docker Image') {
            agent {
                label 'docker' // Specify the label for the Jenkins agent
            }
            environment {
                DOCKER_IMAGE = "admin335/ultimate-cicd:latest:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = 'docker-cred'
            }
            steps {
                script {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh 'docker build -t ${DOCKER_IMAGE} .'
                        def dockerImage = docker.image("${DOCKER_IMAGE}")
                        docker.withRegistry('https://index.docker.io/v1/', "${REGISTRY_CREDENTIALS}") {
                            dockerImage.push()
                        }
                    }
                }
            }
        }
        stage('Update Deployment File') {
            agent {
                label 'docker' // Specify the label for the Jenkins agent
            }
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "AKSHAYBURUNGAL"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    script {
                        sh '''
                            git config user.email "burungaleakshay88@gmail.com"
                            git config user.name "Akshay Burungale"
                            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                        '''
                    }
                }
            }
        }
    }
    post {
        always {
            node('docker') { // Specify the label for the Jenkins agent
                archiveArtifacts artifacts: '**/target/*.log', allowEmptyArchive: true
            }
        }
    }
}
